-- Generated by Oracle SQL Developer Data Modeler 19.1.0.081.0911
--   at:        2020-02-02 21:12:08 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

DROP TABLE IF EXISTS co_measurement_elem;
DROP TABLE IF EXISTS co_param_elem;
DROP TABLE IF EXISTS co_measurement;
DROP TABLE IF EXISTS co_param;
DROP TABLE IF EXISTS co_event;
DROP TABLE IF EXISTS co_event_operation;
DROP TABLE IF EXISTS co_def;
DROP TABLE IF EXISTS co_def_type;

CREATE TABLE co_def_type (
	id 	VARCHAR(1) PRIMARY KEY,
	name  VARCHAr(20)
)
CHARACTER SET=utf8;

CREATE TABLE co_def (
    id            SMALLINT PRIMARY KEY AUTO_INCREMENT,
    def_type		VARCHAR(1),
    name          VARCHAR(50),
    description   TEXT,
    unit          VARCHAR(20),
    dev_serial		VARCHAR(100),
    id_co_def_pair SMALLINT DEFAULT NULL
)
CHARACTER SET=utf8;

CREATE TABLE co_event_operation (
    id            SMALLINT PRIMARY KEY AUTO_INCREMENT,
    name			   VARCHAR(50),
    description   TEXT
)
CHARACTER SET=utf8;

CREATE TABLE co_event (
    id            			SMALLINT PRIMARY KEY AUTO_INCREMENT,
    name          			VARCHAR(50),
    description   			TEXT,
    operator					VARCHAR(2),
    co_def_id_to_comp		SMALLINT NOT NULL,
    co_def_id_comp_to		SMALLINT NOT NULL,
    co_event_operation_id	SMALLINT NOT NULL
)
CHARACTER SET=utf8;

CREATE TABLE co_measurement (
    id            INTEGER PRIMARY KEY AUTO_INCREMENT,
    timestamp     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    co_event_id   SMALLINT DEFAULT NULL,
    co_param_id   INTEGER NOT NULL
)
CHARACTER SET=utf8;

CREATE TABLE co_measurement_elem (
    id                  INTEGER PRIMARY KEY AUTO_INCREMENT,
    value               DOUBLE,
    co_measurement_id   INTEGER NOT NULL,
    co_def_id           SMALLINT NOT NULL
)
CHARACTER SET=utf8;

CREATE TABLE co_param (
    id          INTEGER PRIMARY KEY AUTO_INCREMENT,
    timestamp   TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)
CHARACTER SET=utf8;

CREATE TABLE co_param_elem (
    id            INTEGER PRIMARY KEY AUTO_INCREMENT,
    value         DOUBLE,
    co_param_id   INTEGER NOT NULL,
    co_def_id     SMALLINT NOT NULL
)
CHARACTER SET=utf8;

ALTER TABLE co_def
    ADD CONSTRAINT co_def_co_def_type_fk FOREIGN KEY ( def_type )
        REFERENCES co_def_type ( id );
        
ALTER TABLE co_def
    ADD CONSTRAINT co_def_co_def_pair_fk FOREIGN KEY ( id_co_def_pair )
        REFERENCES co_def ( id );
        
ALTER TABLE co_event
    ADD CONSTRAINT co_event_co_def_fk1 FOREIGN KEY ( co_def_id_to_comp )
        REFERENCES co_def ( id );
        
ALTER TABLE co_event
    ADD CONSTRAINT co_event_co_def_fk2 FOREIGN KEY ( co_def_id_comp_to )
        REFERENCES co_def ( id );
        
ALTER TABLE co_event
    ADD CONSTRAINT co_event_co_event_op_fk FOREIGN KEY ( co_event_operation_id )
        REFERENCES co_event_operation ( id );

ALTER TABLE co_measurement
    ADD CONSTRAINT co_measurement_co_event_fk FOREIGN KEY ( co_event_id )
        REFERENCES co_event ( id );

ALTER TABLE co_measurement
    ADD CONSTRAINT co_measurement_co_param_fk FOREIGN KEY ( co_param_id )
        REFERENCES co_param ( id );

ALTER TABLE co_measurement_elem
    ADD CONSTRAINT co_measurement_elem_co_def_fk FOREIGN KEY ( co_def_id )
        REFERENCES co_def ( id );

ALTER TABLE co_measurement_elem
    ADD CONSTRAINT co_measurement_elem_fk FOREIGN KEY ( co_measurement_id )
        REFERENCES co_measurement ( id );

ALTER TABLE co_param_elem
    ADD CONSTRAINT co_param_elem_co_def_fk FOREIGN KEY ( co_def_id )
        REFERENCES co_def ( id );

ALTER TABLE co_param_elem
    ADD CONSTRAINT co_param_elem_co_param_fk FOREIGN KEY ( co_param_id )
        REFERENCES co_param ( id );
        
        
-- Views
create or replace view co_current_param as
select 
	cpe.id,
	cp.`timestamp`,
	cd.name,
	cpe.value,
	cd.unit,
	cd.def_type,
	cpe.co_param_id,
	cpe.co_def_id,
	cd.description
from 
	co_param_elem cpe 
	join co_def cd 
		on cpe.co_def_id = cd.id 
		join co_param cp
		on cp.id = cpe.co_param_id
where 
	cpe.co_param_id = (
		select 
			cp1.id 
		from 
			co_param cp1
		order by 
			cp1.id
		desc
		limit 1
	);

create or replace view co_event_checker as
select 
	ce.id as 'co_event_id',
	cd1.id as 'co_def_id_to_comp',
	cd1.name as 'co_def_name_to_comp',
	ce.operator,
	ccp.value as 'value_comp_to',
	cd2.name as 'co_def_name_comp_to',
	cd2.id as 'co_def_id_comp_to',
	ccp.co_param_id
from
	co_event ce
	join
	co_def cd1
		on ce.co_def_id_to_comp = cd1.id
		join
		co_def cd2
			on ce.co_def_id_comp_to = cd2.id
			join 
			co_current_param ccp
				on cd2.id = ccp.co_def_id
order by
	ce.id
;

create or replace view co_current_measures as
select 
	cm.`timestamp`,
	cm.co_event_id,
	cme.co_measurement_id,
	cd.name,
	cd.description,
	cme.value,
	cd.unit,
	ccp.value as 'set_value'
from
	co_measurement_elem cme
	join
	co_measurement cm
		on
		cme.co_measurement_id = cm.id
		join
		co_def cd
			on cme.co_def_id = cd.id
			left outer join
			co_def cd2
				on cd.id = cd2.id_co_def_pair
				left outer join
				co_current_param ccp
					on cd2.id = ccp.co_def_id
where cme.co_measurement_id = (select max(id) from co_measurement);


create or replace view dev_co_plot_data as
select
	cm.id,
	cm.`timestamp`,
	(select cme.value from co_measurement_elem cme where cme.co_def_id = (select id from co_def where name ='ds1') and cme.co_measurement_id = cm.id) as 'feeder_temp',
	(select cme.value from co_measurement_elem cme where cme.co_def_id = (select id from co_def where name ='ds2') and cme.co_measurement_id = cm.id) as 'heater_temp',
	(select cme.value from co_measurement_elem cme where cme.co_def_id = (select id from co_def where name ='ds4') and cme.co_measurement_id = cm.id) as 'outside_temp',
  (select cpe.value from co_param_elem cpe where cpe.co_def_id = (select id from co_def where name ='feeder_revo_num') and cpe.co_param_id = cm.co_param_id) as 'feeder_revo_num',
  (select cpe.value from co_param_elem cpe where cpe.co_def_id = (select id from co_def where name ='set_temp') and cpe.co_param_id = cm.co_param_id) as 'set_temp',
  (select cpe.value from co_param_elem cpe where cpe.co_def_id = (select id from co_def where name ='feeder_break') and cpe.co_param_id = cm.co_param_id) as 'feeder_break'
from
	co_measurement cm
order by 
	cm.id
;

create or replace view dev_co_plot_max_range as
select 
	(SELECT `timestamp` FROM `dev_co_plot_data` order by id limit 1) as 'since', 
	(SELECT `timestamp` FROM `dev_co_plot_data` order by id desc limit 1) as 'until'
;